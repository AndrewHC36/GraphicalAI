from __base__ import *  # ~~~ automatically generated by __autoinject__.py ~~~ 
from PySide6.QtWidgets import *
from PySide6.QtCore import Slot


class TestInteractive(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent=parent)

        lyt_main = QHBoxLayout()
        lyt_main.setContentsMargins(0,0,0,0)

        lyt_main.addWidget(QLabel("TEXT"))
        lyt_main.addWidget(QPushButton("[Button]"))
        # lyt_main.addWidget(QPushButton("CLICK ME!!"))

        self.setLayout(lyt_main)


class ModelIOConfigurator(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent=parent)

        wlw_io_manager = QListWidget()

        a = QListWidgetItem()
        a1 = TestInteractive()
        wlw_io_manager.addItem(a)
        wlw_io_manager.setItemWidget(a, a1)
        a.setSizeHint(a1.sizeHint())

        b = QListWidgetItem()
        b1 = TestInteractive()
        wlw_io_manager.addItem(b)
        wlw_io_manager.setItemWidget(b, b1)
        b.setSizeHint(b1.sizeHint())

        c = QListWidgetItem()
        c1 = TestInteractive()
        wlw_io_manager.addItem(c)
        wlw_io_manager.setItemWidget(c, c1)
        c.setSizeHint(c1.sizeHint())

        d = QListWidgetItem()
        d1 = TestInteractive()
        wlw_io_manager.addItem(d)
        wlw_io_manager.setItemWidget(d, d1)
        d.setSizeHint(d1.sizeHint())

        lyt_main = QVBoxLayout()
        lyt_main.addWidget(QLabel("Model I/O configurator"))
        lyt_main.addWidget(wlw_io_manager)

        self.setLayout(lyt_main)


class TrainingPage(QWidget):
    """
    Execution page is where you are allow to execute the specified model. It has Model I/O configurator and
    in-app console I/O if the model specifies it.
    """
    def __init__(self, parent=None):
        super().__init__(parent=parent)

        lyt_left_menu = QVBoxLayout()
        lyt_left_menu.addWidget(ModelIOConfigurator(), 4)
        lyt_left_menu.addWidget(QLabel("Console I/O? with multiple diff types of console?"), 3)
        lyt_left_menu.addWidget(QLabel("Execution Panel"), 3)

        wtw_static_tabs = QTabWidget()
        wtw_static_tabs.insertTab(0, QLabel("future static model showcase will be available here"), "unnamed")
        wtw_static_tabs.insertTab(1, QLabel("ur mom #1"), "unnamed")
        wtw_static_tabs.insertTab(2, QLabel("ur mom #2"), "unnamed")

        lyt_main = QHBoxLayout()
        lyt_main.addLayout(lyt_left_menu, 4)
        lyt_main.addWidget(wtw_static_tabs, 6)

        self.setLayout(lyt_main)
